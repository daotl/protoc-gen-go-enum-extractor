package main

import (
	"strings"

	"google.golang.org/protobuf/compiler/protogen"
)

func genEnumExtractor(gen *protogen.Plugin, file *protogen.File) {
	filename := file.GeneratedFilenamePrefix + "_enum_extractor.go"
	g := gen.NewGeneratedFile(filename, file.GoImportPath)

	g.P("// Code generated by protoc-gen-goenumextractor. DO NOT EDIT.")
	g.P()
	g.P("package ", file.GoPackageName)
	g.P()
	g.P("import \"strings\"")

	for _, enum := range file.Enums {
		prefix := strings.TrimSuffix(enum.Values[0].GoIdent.GoName, unspecifiedSuffix)
		prefix = strings.TrimPrefix(prefix, enum.GoIdent.GoName+"_")

		// extract actual value
		g.P("func (e ", enum.GoIdent.GoName, ") ExtractValue() string {")
		g.P("return strings.TrimPrefix(e.String(), \"", prefix, "\")")
		g.P("}")
		g.P()

		// create enum from actual value
		g.P("func (e *", enum.GoIdent.GoName, ") FromValue(v string) {")
		g.P("*e = ", enum.GoIdent.GoName, "(", enum.GoIdent.GoName, "_value", "[\"", prefix, "\" + v])")
		g.P("}")
		g.P()
	}
}
